<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="7" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-19T13:45:06 ICT" name="Suite" finished-at="2023-03-19T13:45:16 ICT" duration-ms="9862">
    <groups>
    </groups>
    <test started-at="2023-03-19T13:45:06 ICT" name="validPost" finished-at="2023-03-19T13:45:15 ICT" duration-ms="8620">
      <class name="demo.Example1Test">
        <test-method is-config="true" signature="init()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:06 ICT" name="init" finished-at="2023-03-19T13:45:07 ICT" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:07 ICT" name="request" finished-at="2023-03-19T13:45:09 ICT" duration-ms="1669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC01_StatusCodeTest()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:09 ICT" name="TC01_StatusCodeTest" finished-at="2023-03-19T13:45:09 ICT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_StatusCodeTest -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:09 ICT" name="request" finished-at="2023-03-19T13:45:10 ICT" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC02_IdChecked()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:10 ICT" name="TC02_IdChecked" finished-at="2023-03-19T13:45:10 ICT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_IdChecked -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:10 ICT" name="request" finished-at="2023-03-19T13:45:10 ICT" duration-ms="643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC03_CreatedAtChecked()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:10 ICT" name="TC03_CreatedAtChecked" finished-at="2023-03-19T13:45:10 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03_CreatedAtChecked -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:10 ICT" name="request" finished-at="2023-03-19T13:45:11 ICT" duration-ms="862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC04_verifyOnMatchingName()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:11 ICT" name="TC04_verifyOnMatchingName" finished-at="2023-03-19T13:45:11 ICT" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04_verifyOnMatchingName -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:11 ICT" name="request" finished-at="2023-03-19T13:45:14 ICT" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC05_verifyOnMatchingGender()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:14 ICT" name="TC05_verifyOnMatchingGender" finished-at="2023-03-19T13:45:14 ICT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC05_verifyOnMatchingGender -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:14 ICT" name="request" finished-at="2023-03-19T13:45:14 ICT" duration-ms="675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC06_verifyOnMatchingAge()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:14 ICT" name="TC06_verifyOnMatchingAge" finished-at="2023-03-19T13:45:14 ICT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC06_verifyOnMatchingAge -->
        <test-method is-config="true" signature="request()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:14 ICT" name="request" finished-at="2023-03-19T13:45:15 ICT" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- request -->
        <test-method signature="TC07_verifyOnMatchingJob()[pri:0, instance:demo.Example1Test@50ad3bc1]" started-at="2023-03-19T13:45:15 ICT" name="TC07_verifyOnMatchingJob" finished-at="2023-03-19T13:45:15 ICT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC07_verifyOnMatchingJob -->
      </class> <!-- demo.Example1Test -->
    </test> <!-- validPost -->
    <test started-at="2023-03-19T13:45:15 ICT" name="invalidPost" finished-at="2023-03-19T13:45:16 ICT" duration-ms="987">
      <class name="demo.Example2Test">
        <test-method is-config="true" signature="init()[pri:0, instance:demo.Example2Test@7133da86]" started-at="2023-03-19T13:45:15 ICT" name="init" finished-at="2023-03-19T13:45:16 ICT" duration-ms="971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="TC01_StatusCodeTest()[pri:0, instance:demo.Example2Test@7133da86]" started-at="2023-03-19T13:45:16 ICT" name="TC01_StatusCodeTest" finished-at="2023-03-19T13:45:16 ICT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status check failed expected [401] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status check failed expected [401] but found [201]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at demo.Example2Test.TC01_StatusCodeTest(Example2Test.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01_StatusCodeTest -->
        <test-method signature="TC02_MessageChecked()[pri:0, instance:demo.Example2Test@7133da86]" started-at="2023-03-19T13:45:16 ICT" name="TC02_MessageChecked" finished-at="2023-03-19T13:45:16 ICT" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message field check failed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message field check failed expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at demo.Example2Test.TC02_MessageChecked(Example2Test.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02_MessageChecked -->
        <test-method signature="TC03_verifyOnMessageContainName()[pri:0, instance:demo.Example2Test@7133da86]" started-at="2023-03-19T13:45:16 ICT" name="TC03_verifyOnMessageContainName" finished-at="2023-03-19T13:45:16 ICT" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message not contain invalid field expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message not contain invalid field expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at demo.Example2Test.TC03_verifyOnMessageContainName(Example2Test.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03_verifyOnMessageContainName -->
      </class> <!-- demo.Example2Test -->
    </test> <!-- invalidPost -->
  </suite> <!-- Suite -->
</testng-results>
