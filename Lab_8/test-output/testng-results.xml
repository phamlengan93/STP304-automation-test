<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-19T13:48:51 ICT" name="Suite" finished-at="2023-03-19T13:48:54 ICT" duration-ms="3266">
    <groups>
    </groups>
    <test started-at="2023-03-19T13:48:51 ICT" name="validGet" finished-at="2023-03-19T13:48:54 ICT" duration-ms="2341">
      <class name="Lab8.Example1Test">
        <test-method is-config="true" signature="init()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:51 ICT" name="init" finished-at="2023-03-19T13:48:52 ICT" duration-ms="761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="when()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:52 ICT" name="when" finished-at="2023-03-19T13:48:53 ICT" duration-ms="1080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when -->
        <test-method signature="TS01_StatusCodeChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS01_StatusCodeChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS01_StatusCodeChecked -->
        <test-method signature="TS02_IdChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS02_IdChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS02_IdChecked -->
        <test-method signature="TS03_EmailChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS03_EmailChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS03_EmailChecked -->
        <test-method signature="TS04_FirstNameChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS04_FirstNameChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS04_FirstNameChecked -->
        <test-method signature="TS05_LastNameChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS05_LastNameChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS05_LastNameChecked -->
        <test-method signature="TS06_AvatarChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS06_AvatarChecked" finished-at="2023-03-19T13:48:53 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS06_AvatarChecked -->
        <test-method signature="TS07_UserIdChecked()[pri:0, instance:Lab8.Example1Test@932bc4a]" started-at="2023-03-19T13:48:53 ICT" name="TS07_UserIdChecked" finished-at="2023-03-19T13:48:54 ICT" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS07_UserIdChecked -->
      </class> <!-- Lab8.Example1Test -->
    </test> <!-- validGet -->
    <test started-at="2023-03-19T13:48:54 ICT" name="invalidGet" finished-at="2023-03-19T13:48:54 ICT" duration-ms="868">
      <class name="Lab8.Example2Test">
        <test-method is-config="true" signature="init()[pri:0, instance:Lab8.Example2Test@7133da86]" started-at="2023-03-19T13:48:54 ICT" name="init" finished-at="2023-03-19T13:48:54 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="TC_when()[pri:0, instance:Lab8.Example2Test@7133da86]" started-at="2023-03-19T13:48:54 ICT" name="TC_when" finished-at="2023-03-19T13:48:54 ICT" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_when -->
        <test-method signature="TS01_StatusCodeChecked()[pri:0, instance:Lab8.Example2Test@7133da86]" started-at="2023-03-19T13:48:54 ICT" name="TS01_StatusCodeChecked" finished-at="2023-03-19T13:48:54 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS01_StatusCodeChecked -->
        <test-method signature="TS02_MessageChecked()[pri:0, instance:Lab8.Example2Test@7133da86]" started-at="2023-03-19T13:48:54 ICT" name="TS02_MessageChecked" finished-at="2023-03-19T13:48:54 ICT" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message check failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message check failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at Lab8.Example2Test.TS02_MessageChecked(Example2Test.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS02_MessageChecked -->
        <test-method signature="TS03_MessageContentChecked()[pri:0, instance:Lab8.Example2Test@7133da86]" started-at="2023-03-19T13:48:54 ICT" name="TS03_MessageContentChecked" finished-at="2023-03-19T13:48:54 ICT" duration-ms="11" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Message content check failed expected [User not found!] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Message content check failed expected [User not found!] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at Lab8.Example2Test.TS03_MessageContentChecked(Example2Test.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TS03_MessageContentChecked -->
      </class> <!-- Lab8.Example2Test -->
    </test> <!-- invalidGet -->
  </suite> <!-- Suite -->
</testng-results>
